# REST API references
# HEIG-VD - AMT - Gamification
# For more informations about this API: https://github.com/moodah/AMT_Gamification
swagger: '2.0'
info:
  title: Gamification
  description: REST API for the Gamification project, see https://github.com/moodah/AMT_Gamification for more informations.
  version: "1.0.0"
# the domain of the service
host: localhost
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /gamification
consumes:
  - application/json
produces:
  - application/json
paths:
  /users/{id}:
    get:
      summary: User's reputation
      description: The Users endpoint returns the reputation of the user defined by the parameter {id}
      parameters:
        - name: id
          in: path
          description: The user's ID
          required: true
          type: number
          format: integer
        - name: filter
          in: query
          description: Filter the desired Reputation members 
          required: false
          type: array
          items:
            type: string
      tags:
        - Users
      responses:
        200:
          description: An object containing the user reputation
          schema:
            type: object
            items:
              $ref: '#/definitions/Reputation'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /leaderboards:
    get:
      summary: Top users
      description: The Leaderboards endpoint returns a list of the top users.
      parameters:
        - name: page
          in: query
          default: 1
          description: The page number
          required: false
          type: number
          format: integer
        - name: per_page
          in: query
          default: 10
          description: Number of result per page
          required: false
          type: number
          format: integer
      tags:
        - Leaderboards
      responses:
        200:
          description: An array of users, ordered by their global reputation
          schema:
            type: array
            items:
              $ref: '#/definitions/Reputation'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /events:
    post:
      summary: Events generated by the client
      description: The Events endpoint allows the client to submit new events occuring in his app
      parameters:
        - name: event
          in: body
          schema:
            $ref: '#/definitions/Event'
          required: true
      tags:
        - Events
      responses:
        201:
          description: The event is correctly recorded
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /rules:
    get:
      summary: Get Gamification rules
      description: The Rules endpoint returns the rules defined by the client
      tags:
        - Rules
      responses:
        200:
          description: An array of rules
          schema:
            type: array
            items:
              $ref: '#/definitions/Rule'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create Gamification rules
      description: The Rules endpoint allows the client to submit new rules
      tags:
        - Rules
      parameters:
        - name: rule
          in: body
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        201:
          description: The rule is correctly recorded
          schema: 
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /rules/{id}:
    get:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /levels:
    get:
      summary: Get Gamification levels
      description: The levels endpoint returns the levels defined by the client
      tags:
        - levels
      responses:
        200:
          description: An array of levels
          schema:
            type: array
            items:
              $ref: '#/definitions/level'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create Gamification levels
      description: The levels endpoint allows the client to submit new levels
      tags:
        - levels
      parameters:
        - name: level
          in: body
          required: true
          schema:
            $ref: '#/definitions/level'
      responses:
        201:
          description: The level is correctly recorded
          schema: 
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /levels/{id}:
    get:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /badges:
    get:
      summary: Get Gamification badges
      description: The badges endpoint returns the badges defined by the client
      tags:
        - badges
      responses:
        200:
          description: An array of badges
          schema:
            type: array
            items:
              $ref: '#/definitions/Badge'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create Gamification badges
      description: The badges endpoint allows the client to submit new badges
      tags:
        - badges
      parameters:
        - name: badge
          in: body
          required: true
          schema:
            $ref: '#/definitions/Badge'
      responses:
        201:
          description: The badge is correctly recorded
          schema: 
            type: string
        default:
          description: Unexpected error
          schema
            $ref: '#/definitions/Error'
    delete:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /badges/{id}:
    get:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: todo
      description: todo
      tags:
        - todo
      parameters:
        - name: todo
      responses:
        204:
          description: todo
          schema: 
            type: null
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
